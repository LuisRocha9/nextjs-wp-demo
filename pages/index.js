import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.scss';
import MainMenu from '../components/main-menu';
import ProjectsList from '../components/projects-list';
import Search from '../components/search';
import {getAllProjects, getMainMenu, getAllCategoriesAndTags } from '../lib/api';
import { request } from 'graphql-request';
import {useState , useEffect} from 'react';
import useSWR from "swr";

const fetcher = (query, variables) => request('https://next-js-wordpress.previews.mariaadelaide.com/graphql', query, variables);

export default function Home({allProjects, menuItems, categoriesAndTags}) {

    const [categories, setCategories] = useState([]);
    const [tags, setTags] = useState([]);


     

    const { data, error } = useSWR([`
                         query GetProjects ($categories: [String] = "", $tags: [String] = "") {
                          projects(
                           where: {
                              taxQuery: {
                                relation: AND,
                                taxArray: [
                                  {
                                    terms: $categories,
                                    taxonomy: CATEGORY,
                                    operator: AND,
                                    field: SLUG
                                  },
                                  {
                                    terms: $tags,
                                    taxonomy: TAG,
                                    operator: AND,
                                    field: SLUG
                                  }
                                ]
                              }
                            }
                          ) {
                            edges {
                              node {
                                title
                                date
                                excerpt
                                slug
                                id
                                featuredImage {
                                  node {
                                    sourceUrl
                                  }
                                }
                                categories {
                                  nodes {
                                    categoryId
                                    slug
                                  }
                                }
                                tags {
                                  nodes {
                                    tagId
                                    slug
                                  }
                                }
                              }
                            }
                          }
                        }`,{categories, tags}],fetcher);

    console.log(categories)
          

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={"max-container"}>
                <MainMenu menuItems={menuItems} />
                <Search 
                            categoriesAndTags={categoriesAndTags}
                            categories={categories}
                            setCategories={setCategories}
                            tags={tags}
                            setTags={setTags}/>
                {!data ? <h1>Loading...</h1> :
                    <div>
                        <ProjectsList projects={data.projects} />
                    </div>
                
                }

            </main>
        </div>
    )
}

export async function getStaticProps() {
    const allProjects = await getAllProjects();
    const menuItems = await getMainMenu();
    const categoriesAndTags = await getAllCategoriesAndTags();
    return {
        props: { allProjects, menuItems, categoriesAndTags },
    }
}


const query = `{
                         query GetProjects ($categories: [String] = "", $tags: [String] = "") {
                          projects(
                           where: {
                              taxQuery: {
                                relation: AND,
                                taxArray: [
                                  {
                                    terms: $categories,
                                    taxonomy: CATEGORY,
                                    operator: AND,
                                    field: SLUG
                                  },
                                  {
                                    terms: $tags,
                                    taxonomy: TAG,
                                    operator: AND,
                                    field: SLUG
                                  }
                                ]
                              }
                            }
                          ) {
                            edges {
                              node {
                                title
                                date
                                excerpt
                                slug
                                id
                                featuredImage {
                                  node {
                                    sourceUrl
                                  }
                                }
                                categories {
                                  nodes {
                                    categoryId
                                    slug
                                  }
                                }
                                tags {
                                  nodes {
                                    tagId
                                    slug
                                  }
                                }
                              }
                            }
                          }
                        }`